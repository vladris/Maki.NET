<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\..\Maki\Templates\Common.t4" #>
<#@ output extension=".cs" #>
using Maki.Functional;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;

namespace MakiTest
{
    [TestClass]
    public class FunctionExtensionsTest
    {
<#
for (int types = 2; types <= 16; types++)
{
#>
        [TestMethod]
        public void Func<#= types #>CurryTransformTest()
        {
            Func<<#= JoinWithSelector(0, types, _ => "int") #>, int> func =
                (<#= JoinWithPrefix(types, "i") #>) 
                    => <#= JoinWithPrefix(1, types, "i", " + ") #>;

            int sum = func.Curry()(<#= JoinWithPrefix(1, types, "", ")(") #>);

            Assert.AreEqual(<#= types * (types + 1) / 2 #>, sum);
        }

        [TestMethod]
        public void Func<#= types #>CurryApplyTest()
        {
            Func<<#= JoinWithSelector(0, types, _ => "int") #>, int> func =
                (<#= JoinWithPrefix(types, "i") #>) 
                    => <#= JoinWithPrefix(1, types, "i", " + ") #>;

            int sum = func.Curry(<#= JoinWithPrefix(1, types - 1, "", ").Curry(") #>)(<#= types #>);

            Assert.AreEqual(<#= types * (types + 1) / 2 #>, sum);
        }

<#
}
#>
    }
}